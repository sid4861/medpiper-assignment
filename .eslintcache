[{"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\index.js":"1","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\App.js":"2","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\reportWebVitals.js":"3","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\form.js":"4","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\PersonalDetailsForm.js":"5","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\personalDetailsContext.js":"6","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\createDataContext.js":"7","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\resumePreview.js":"8","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\experiencesContext.js":"9","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\Tabs.js":"10","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\hospitalExperiences.js":"11","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\addHospitalExperienceModal.js":"12","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\editHospitalExperienceModal.js":"13","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\deleteHospitalExperienceModal.js":"14"},{"size":566,"mtime":1611143343204,"results":"15","hashOfConfig":"16"},{"size":1061,"mtime":1611283742895,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":935,"mtime":1611284402247,"results":"19","hashOfConfig":"16"},{"size":3290,"mtime":1611160763612,"results":"20","hashOfConfig":"16"},{"size":1582,"mtime":1611157350229,"results":"21","hashOfConfig":"16"},{"size":565,"mtime":1611156511474,"results":"22","hashOfConfig":"16"},{"size":2892,"mtime":1611309241564,"results":"23","hashOfConfig":"16"},{"size":2409,"mtime":1611301628464,"results":"24","hashOfConfig":"16"},{"size":786,"mtime":1611284566898,"results":"25","hashOfConfig":"16"},{"size":1363,"mtime":1611301071894,"results":"26","hashOfConfig":"16"},{"size":1949,"mtime":1611285866755,"results":"27","hashOfConfig":"16"},{"size":1942,"mtime":1611291448680,"results":"28","hashOfConfig":"16"},{"size":1871,"mtime":1611301619039,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"4zdc0h",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\index.js",[],["66","67"],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\App.js",["68"],"import \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"../src/components/form\";\nimport { Provider as PersonalDetailsProvider } from \"./context/personalDetailsContext\";\nimport { Provider as ExperienceProvider } from \"./context/experiencesContext\";\nimport MyDocument from \"./components/resumePreview\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\n\nfunction App() {\n  return (\n    <ExperienceProvider>\n      <PersonalDetailsProvider>\n        <div className=\"App\">\n          <Container fluid>\n            <Row style={{ height: \"100vh\" }}>\n              <Col md={6}>\n                <Form />\n              </Col>\n              <Col md={6}>\n                {/* <PDFViewer style={{width: '100%', height: '100vh'}}> */}\n                <MyDocument />\n                {/* </PDFViewer> */}\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </PersonalDetailsProvider>\n    </ExperienceProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\reportWebVitals.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\form.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\PersonalDetailsForm.js",["69"],"import React, { useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Context as personalDetailsContext } from \"../context/personalDetailsContext\";\r\n\r\nconst PersonalDetailsForm = () => {\r\n  const {\r\n    inputFirstName,\r\n    inputMiddleName,\r\n    inputLastName,\r\n    inputDateOfBirth,\r\n    inputGender,\r\n    state,\r\n  } = useContext(personalDetailsContext);\r\n\r\n//   const clickHandler = () => {\r\n//     console.log(\r\n//       state.firstName,\r\n//       state.middleName,\r\n//       state.lastName,\r\n//       state.dateOfBirth,\r\n//       state.gender\r\n//     );\r\n//   };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter first name\"\r\n            value={state.firstName}\r\n            onChange={(event) => {\r\n              inputFirstName(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridMiddleName\">\r\n          <Form.Label>Middle Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter middle name\"\r\n            value={state.middleName}\r\n            onChange={(event) => {\r\n              inputMiddleName(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridLastName\">\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter last name\"\r\n            value={state.lastName}\r\n            onChange={(event) => {\r\n              inputLastName(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridDob\">\r\n          <Form.Label>Date of birth</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n            placeholder=\"dd/mm/yy\"\r\n            onChange={(event) => {\r\n              inputDateOfBirth(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridGender\">\r\n          <Form.Label>Gender</Form.Label>\r\n          <div key=\"custom-inline-radio\" className=\"mb-3\">\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              label=\"Male\"\r\n              type=\"radio\"\r\n              id=\"custom-inline-radio-1\"\r\n              value=\"Male\"\r\n              checked={state.gender === \"Male\"}\r\n              onChange={(e) => inputGender(e.currentTarget.value)}\r\n            />\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              label=\"Female\"\r\n              type=\"radio\"\r\n              id=\"custom-inline-radio-2\"\r\n              value=\"Female\"\r\n              checked={state.gender === \"Female\"}\r\n              onChange={(e) => inputGender(e.currentTarget.value)}\r\n            />\r\n          </div>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      {/* <Button onClick={clickHandler}> Display</Button> */}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PersonalDetailsForm;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\personalDetailsContext.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\createDataContext.js",["70"],"import React, { useReducer } from \"react\";\r\n\r\nexport default (reducer, actions, initialState) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const boundActions = {};\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n    return (\r\n      <Context.Provider value={{ state, ...boundActions }}>\r\n        {\" \"}\r\n        {children}{\" \"}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n\r\n  return { Context, Provider };\r\n};\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\resumePreview.js",["71"],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\experiencesContext.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\Tabs.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\hospitalExperiences.js",["72","73","74"],"import React, { useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport AddHospitalExperienceModal from './addHospitalExperienceModal';\r\nimport EditIcon from '../edit-24px.svg';\r\nimport EditHospitalExperienceModal from './editHospitalExperienceModal';\r\nimport DeleteHospitalExperienceModal from './deleteHospitalExperienceModal';\r\n\r\nconst HospitalExperiences = () => {\r\n  const { addHospitalExperience, state } = useContext(experiencesContext);\r\n  const hospitalExperiencesList = state.hospitalExperiences.map((exp, index) => {\r\n      return (\r\n          <div style={{flexDirection: 'row'}}>\r\n             <li style={{display: 'inline'}}> \r\n                {exp} \r\n            </li>\r\n            {/* <img src={EditIcon} onClick={() => {console.log('edit clicked')}} ></img> */}\r\n            <EditHospitalExperienceModal experience={exp} expIndex={index} />\r\n            <DeleteHospitalExperienceModal  experience={exp} expIndex={index} />\r\n          </div>\r\n     );\r\n  });\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {hospitalExperiencesList}\r\n      </ul>\r\n      {/* <Button variant=\"primary\" style={{margin: 'auto', marginTop: '16px'}} >Add New</Button> */}\r\n      <AddHospitalExperienceModal/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HospitalExperiences;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\addHospitalExperienceModal.js",["75"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst AddHospitalExperienceModal = () => {\r\n  const { addHospitalExperience, state } = useContext(experiencesContext);\r\n  const [hospitalExperience, setHospitalExperience] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"primary\"\r\n        style={{ margin: \"auto\", marginTop: \"16px\" }}\r\n        onClick={handleShow}\r\n      >\r\n        Add new\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Please enter new hospital experience</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"hospitalExperience\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter hospital experience\"\r\n                value={hospitalExperience}\r\n                onChange={(event) => {\r\n                  setHospitalExperience(event.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              addHospitalExperience(hospitalExperience);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddHospitalExperienceModal;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\editHospitalExperienceModal.js",["76","77"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport EditIcon from \"../edit-24px.svg\";\r\n\r\nconst EditHospitalExperienceModal = (props) => {\r\n  const { editHospitalExperience, state } = useContext(experiencesContext);\r\n  const [hospitalExperience, setHospitalExperience] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <img src={EditIcon} onClick={handleShow}></img>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title> Edit hospital experience </Modal.Title>{\" \"}\r\n        </Modal.Header>{\" \"}\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"hospitalExperience\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={props.experience}\r\n                value={hospitalExperience}\r\n                onChange={(event) => {\r\n                  setHospitalExperience(event.target.value);\r\n                }}\r\n              />{\" \"}\r\n            </Form.Group>{\" \"}\r\n          </Form>{\" \"}\r\n        </Modal.Body>{\" \"}\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              editHospitalExperience(hospitalExperience, props.expIndex);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Save{\" \"}\r\n          </Button>{\" \"}\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel{\" \"}\r\n          </Button>{\" \"}\r\n        </Modal.Footer>{\" \"}\r\n      </Modal>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditHospitalExperienceModal;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\deleteHospitalExperienceModal.js",["78","79","80"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DeleteIcon from \"../delete-24px.svg\";\r\n\r\nconst DeleteHospitalExperienceModal = (props) => {\r\n  const { deleteHospitalExperience, state } = useContext(experiencesContext);\r\n  const [hospitalExperience, setHospitalExperience] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <img src={DeleteIcon} onClick={handleShow}>\r\n      </img>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title> Deleting hospital experience </Modal.Title>{\" \"}\r\n        </Modal.Header>{\" \"}\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"hospitalExperience\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={props.experience}\r\n                value={hospitalExperience}\r\n                disabled\r\n              />{\" \"}\r\n            </Form.Group>{\" \"}\r\n          </Form>{\" \"}\r\n        </Modal.Body>{\" \"}\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              deleteHospitalExperience(props.experience, props.expIndex);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Comfirm{\" \"}\r\n          </Button>{\" \"}\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel{\" \"}\r\n          </Button>{\" \"}\r\n        </Modal.Footer>{\" \"}\r\n      </Modal>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteHospitalExperienceModal;\r\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":9,"column":10,"nodeType":"87","messageId":"88","endLine":9,"endColumn":19},{"ruleId":"85","severity":1,"message":"89","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":3,"column":1,"nodeType":"92","endLine":21,"endColumn":3},{"ruleId":"85","severity":1,"message":"93","line":33,"column":9,"nodeType":"87","messageId":"88","endLine":33,"endColumn":32},{"ruleId":"85","severity":1,"message":"89","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"94","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":16},{"ruleId":"85","severity":1,"message":"95","line":10,"column":11,"nodeType":"87","messageId":"88","endLine":10,"endColumn":32},{"ruleId":"85","severity":1,"message":"96","line":9,"column":34,"nodeType":"87","messageId":"88","endLine":9,"endColumn":39},{"ruleId":"85","severity":1,"message":"96","line":10,"column":35,"nodeType":"87","messageId":"88","endLine":10,"endColumn":40},{"ruleId":"97","severity":1,"message":"98","line":19,"column":7,"nodeType":"99","endLine":19,"endColumn":48},{"ruleId":"85","severity":1,"message":"96","line":10,"column":37,"nodeType":"87","messageId":"88","endLine":10,"endColumn":42},{"ruleId":"85","severity":1,"message":"100","line":11,"column":30,"nodeType":"87","messageId":"88","endLine":11,"endColumn":51},{"ruleId":"97","severity":1,"message":"98","line":19,"column":7,"nodeType":"99","endLine":19,"endColumn":50},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'PDFViewer' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'hospitalExperiencesList' is assigned a value but never used.","'EditIcon' is defined but never used.","'addHospitalExperience' is assigned a value but never used.","'state' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setHospitalExperience' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]