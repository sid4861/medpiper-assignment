[{"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\index.js":"1","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\App.js":"2","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\reportWebVitals.js":"3","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\form.js":"4","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\PersonalDetailsForm.js":"5","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\personalDetailsContext.js":"6","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\createDataContext.js":"7","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\resumePreview.js":"8","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\experiencesContext.js":"9","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\Tabs.js":"10","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\hospitalExperiences.js":"11","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\addHospitalExperienceModal.js":"12","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\editHospitalExperienceModal.js":"13","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\deleteHospitalExperienceModal.js":"14","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\specialAssignmentsServed.js":"15","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\addSpecialAssignmentModal.js":"16","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\deleteSpecialAssignmentModal.js":"17","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\editSpecialAssignmentModal.js":"18","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\professionalPositions.js":"19","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\AddProfessionalPositionModal.js":"20","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\editProfessionalPositionsModal.js":"21","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\deleteProfessionalPositionModal.js":"22"},{"size":566,"mtime":1611143343204,"results":"23","hashOfConfig":"24"},{"size":1061,"mtime":1611283742895,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":3908,"mtime":1611382721320,"results":"27","hashOfConfig":"24"},{"size":3290,"mtime":1611160763612,"results":"28","hashOfConfig":"24"},{"size":1582,"mtime":1611157350229,"results":"29","hashOfConfig":"24"},{"size":565,"mtime":1611156511474,"results":"30","hashOfConfig":"24"},{"size":3952,"mtime":1611377305983,"results":"31","hashOfConfig":"24"},{"size":5225,"mtime":1611376594607,"results":"32","hashOfConfig":"24"},{"size":979,"mtime":1611316744492,"results":"33","hashOfConfig":"24"},{"size":1391,"mtime":1611377017049,"results":"34","hashOfConfig":"24"},{"size":1949,"mtime":1611285866755,"results":"35","hashOfConfig":"24"},{"size":1942,"mtime":1611291448680,"results":"36","hashOfConfig":"24"},{"size":1868,"mtime":1611312390174,"results":"37","hashOfConfig":"24"},{"size":1411,"mtime":1611376891482,"results":"38","hashOfConfig":"24"},{"size":1954,"mtime":1611311289217,"results":"39","hashOfConfig":"24"},{"size":1889,"mtime":1611316030143,"results":"40","hashOfConfig":"24"},{"size":1946,"mtime":1611312157760,"results":"41","hashOfConfig":"24"},{"size":1423,"mtime":1611377256392,"results":"42","hashOfConfig":"24"},{"size":1979,"mtime":1611316896741,"results":"43","hashOfConfig":"24"},{"size":1966,"mtime":1611317458946,"results":"44","hashOfConfig":"24"},{"size":1886,"mtime":1611317574824,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"4zdc0h",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"48"},"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\index.js",[],["107","108"],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\App.js",["109"],"import \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"../src/components/form\";\nimport { Provider as PersonalDetailsProvider } from \"./context/personalDetailsContext\";\nimport { Provider as ExperienceProvider } from \"./context/experiencesContext\";\nimport MyDocument from \"./components/resumePreview\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\n\nfunction App() {\n  return (\n    <ExperienceProvider>\n      <PersonalDetailsProvider>\n        <div className=\"App\">\n          <Container fluid>\n            <Row style={{ height: \"100vh\" }}>\n              <Col md={6}>\n                <Form />\n              </Col>\n              <Col md={6}>\n                {/* <PDFViewer style={{width: '100%', height: '100vh'}}> */}\n                <MyDocument />\n                {/* </PDFViewer> */}\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </PersonalDetailsProvider>\n    </ExperienceProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\reportWebVitals.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\form.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\PersonalDetailsForm.js",["110"],"import React, { useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Context as personalDetailsContext } from \"../context/personalDetailsContext\";\r\n\r\nconst PersonalDetailsForm = () => {\r\n  const {\r\n    inputFirstName,\r\n    inputMiddleName,\r\n    inputLastName,\r\n    inputDateOfBirth,\r\n    inputGender,\r\n    state,\r\n  } = useContext(personalDetailsContext);\r\n\r\n//   const clickHandler = () => {\r\n//     console.log(\r\n//       state.firstName,\r\n//       state.middleName,\r\n//       state.lastName,\r\n//       state.dateOfBirth,\r\n//       state.gender\r\n//     );\r\n//   };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter first name\"\r\n            value={state.firstName}\r\n            onChange={(event) => {\r\n              inputFirstName(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridMiddleName\">\r\n          <Form.Label>Middle Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter middle name\"\r\n            value={state.middleName}\r\n            onChange={(event) => {\r\n              inputMiddleName(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridLastName\">\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter last name\"\r\n            value={state.lastName}\r\n            onChange={(event) => {\r\n              inputLastName(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridDob\">\r\n          <Form.Label>Date of birth</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n            placeholder=\"dd/mm/yy\"\r\n            onChange={(event) => {\r\n              inputDateOfBirth(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridGender\">\r\n          <Form.Label>Gender</Form.Label>\r\n          <div key=\"custom-inline-radio\" className=\"mb-3\">\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              label=\"Male\"\r\n              type=\"radio\"\r\n              id=\"custom-inline-radio-1\"\r\n              value=\"Male\"\r\n              checked={state.gender === \"Male\"}\r\n              onChange={(e) => inputGender(e.currentTarget.value)}\r\n            />\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              label=\"Female\"\r\n              type=\"radio\"\r\n              id=\"custom-inline-radio-2\"\r\n              value=\"Female\"\r\n              checked={state.gender === \"Female\"}\r\n              onChange={(e) => inputGender(e.currentTarget.value)}\r\n            />\r\n          </div>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      {/* <Button onClick={clickHandler}> Display</Button> */}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PersonalDetailsForm;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\personalDetailsContext.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\createDataContext.js",["111"],"import React, { useReducer } from \"react\";\r\n\r\nexport default (reducer, actions, initialState) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const boundActions = {};\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n    return (\r\n      <Context.Provider value={{ state, ...boundActions }}>\r\n        {\" \"}\r\n        {children}{\" \"}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n\r\n  return { Context, Provider };\r\n};\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\resumePreview.js",["112"],"import React, { useContext } from \"react\";\r\nimport {\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n  Image,\r\n} from \"@react-pdf/renderer\";\r\nimport { Context as personalDetailsContext } from \"../context/personalDetailsContext\";\r\nimport { Context as ExperiencesContext } from \"../context/experiencesContext\";\r\n\r\nimport { PDFViewer } from \"@react-pdf/renderer\";\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: \"col\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  section: {\r\n    // margin: 10,\r\n    // padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\n// Create Document Component\r\nconst MyDocument = () => {\r\n  const { state } = useContext(personalDetailsContext);\r\n\r\n  const experiencesContext = useContext(ExperiencesContext);\r\n\r\n  const hospitalExperiencesList = experiencesContext.state.hospitalExperiences.map(\r\n    (exp, index) => {\r\n      return <li style={{ display: \"inline\" }}>{exp}</li>;\r\n    }\r\n  );\r\n\r\n  return (\r\n    <PDFViewer style={{ width: \"100%\", height: \"100vh\" }}>\r\n      <Document>\r\n        <Page size=\"A4\" style={styles.page}>\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              backgroundColor: \"#363e49\",\r\n              color: \"#fff\",\r\n              padding: \"2rem\",\r\n            }}\r\n          >\r\n            <View style={{ flexDirection: \"col\", marginVertical: \"16px\" }}>\r\n              <Text>\r\n                {\" \"}\r\n                Dr. {state.firstName} {state.middleName} {state.lastName}{\" \"}\r\n              </Text>\r\n              <Text style={{ maxWidth: \"350px\", marginTop: 8 }}>\r\n                {\" \"}\r\n                MBBS, MD, MSC, FICP, FRCP{\" \"}\r\n              </Text>\r\n              <Text style={{ maxWidth: \"350px\", marginTop: 8 }}>\r\n                {\" \"}\r\n                {String(state.dateOfBirth)}{\" \"}\r\n              </Text>\r\n            </View>\r\n            <View>\r\n              <Image\r\n                source=\"https://images.unsplash.com/photo-1537368910025-700350fe46c7?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\"\r\n                style={{\r\n                  width: \"80px\",\r\n                  height: \"100px\",\r\n                  marginVertical: \"8px\",\r\n                }}\r\n              ></Image>\r\n            </View>\r\n          </View>\r\n\r\n          <View style={{ marginTop: 16 }}>\r\n            <Text>1 - Professional Experiences</Text>\r\n\r\n            <View style={{ marginTop: 16, marginLeft: 32 }}>\r\n              <Text>1.1 Hospital Experiences</Text>\r\n              {experiencesContext.state.hospitalExperiences.map(\r\n                (exp, index) => {\r\n                  return (\r\n                    <Text style={{ display: \"inline\", marginLeft: 64 }}>\r\n                    {`\\u2022 ${exp}`}\r\n                    </Text>\r\n                  );\r\n                }\r\n              )}\r\n            </View>\r\n\r\n            <View style={{ marginTop: 16, marginLeft: 32 }}>\r\n              <Text>1.2 Special Assignments Served</Text>\r\n              {experiencesContext.state.specialAssignmentsServed.map(\r\n                (exp, index) => {\r\n                  return (\r\n                    <Text style={{ display: \"inline\", marginLeft: 64 }}>\r\n                    {`\\u2022 ${exp}`}\r\n                    </Text>\r\n                  );\r\n                }\r\n              )}\r\n            </View>\r\n\r\n            <View style={{ marginTop: 16, marginLeft: 32 }}>\r\n              <Text>1.3 Professional Positions Held</Text>\r\n              {experiencesContext.state.professionalPositions.map(\r\n                (exp, index) => {\r\n                  return (\r\n                    <Text style={{ display: \"inline\", marginLeft: 64 }}>\r\n                    {`\\u2022 ${exp}`}\r\n                    </Text>\r\n                  );\r\n                }\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Page>\r\n      </Document>\r\n    </PDFViewer>\r\n  );\r\n};\r\n\r\nexport default MyDocument;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\experiencesContext.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\Tabs.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\hospitalExperiences.js",["113","114","115"],"import React, { useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport AddHospitalExperienceModal from \"./addHospitalExperienceModal\";\r\nimport EditIcon from \"../edit-24px.svg\";\r\nimport EditHospitalExperienceModal from \"./editHospitalExperienceModal\";\r\nimport DeleteHospitalExperienceModal from \"./deleteHospitalExperienceModal\";\r\n\r\nconst HospitalExperiences = () => {\r\n  const { addHospitalExperience, state } = useContext(experiencesContext);\r\n  const hospitalExperiencesList = state.hospitalExperiences.map(\r\n    (exp, index) => {\r\n      return (\r\n        <div style={{ flexDirection: \"row\" }}>\r\n          <li style={{ display: \"inline\" }}> {`\\u2022 ${exp}`} </li>{\" \"}\r\n          {/* <img src={EditIcon} onClick={() => {console.log('edit clicked')}} ></img> */}{\" \"}\r\n          <EditHospitalExperienceModal experience={exp} expIndex={index} />{\" \"}\r\n          <DeleteHospitalExperienceModal experience={exp} expIndex={index} />{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      <ul style={{ marginTop: \"40px\" }}> {hospitalExperiencesList} </ul>{\" \"}\r\n      {/* <Button variant=\"primary\" style={{margin: 'auto', marginTop: '16px'}} >Add New</Button> */}{\" \"}\r\n      <AddHospitalExperienceModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HospitalExperiences;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\addHospitalExperienceModal.js",["116"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst AddHospitalExperienceModal = () => {\r\n  const { addHospitalExperience, state } = useContext(experiencesContext);\r\n  const [hospitalExperience, setHospitalExperience] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"primary\"\r\n        style={{ margin: \"auto\", marginTop: \"16px\" }}\r\n        onClick={handleShow}\r\n      >\r\n        Add new\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Please enter new hospital experience</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"hospitalExperience\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter hospital experience\"\r\n                value={hospitalExperience}\r\n                onChange={(event) => {\r\n                  setHospitalExperience(event.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              addHospitalExperience(hospitalExperience);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddHospitalExperienceModal;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\editHospitalExperienceModal.js",["117","118"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport EditIcon from \"../edit-24px.svg\";\r\n\r\nconst EditHospitalExperienceModal = (props) => {\r\n  const { editHospitalExperience, state } = useContext(experiencesContext);\r\n  const [hospitalExperience, setHospitalExperience] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <img src={EditIcon} onClick={handleShow}></img>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title> Edit hospital experience </Modal.Title>{\" \"}\r\n        </Modal.Header>{\" \"}\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"hospitalExperience\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={props.experience}\r\n                value={hospitalExperience}\r\n                onChange={(event) => {\r\n                  setHospitalExperience(event.target.value);\r\n                }}\r\n              />{\" \"}\r\n            </Form.Group>{\" \"}\r\n          </Form>{\" \"}\r\n        </Modal.Body>{\" \"}\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              editHospitalExperience(hospitalExperience, props.expIndex);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Save{\" \"}\r\n          </Button>{\" \"}\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel{\" \"}\r\n          </Button>{\" \"}\r\n        </Modal.Footer>{\" \"}\r\n      </Modal>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditHospitalExperienceModal;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\deleteHospitalExperienceModal.js",["119","120","121"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DeleteIcon from \"../delete-24px.svg\";\r\n\r\nconst DeleteHospitalExperienceModal = (props) => {\r\n  const { deleteHospitalExperience, state } = useContext(experiencesContext);\r\n  const [hospitalExperience, setHospitalExperience] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <img src={DeleteIcon} onClick={handleShow}></img>{\" \"}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title> Deleting hospital experience </Modal.Title>{\" \"}\r\n        </Modal.Header>{\" \"}\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"hospitalExperience\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={props.experience}\r\n                value={hospitalExperience}\r\n                disabled\r\n              />{\" \"}\r\n            </Form.Group>{\" \"}\r\n          </Form>{\" \"}\r\n        </Modal.Body>{\" \"}\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              deleteHospitalExperience(props.experience, props.expIndex);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Confirm{\" \"}\r\n          </Button>{\" \"}\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel{\" \"}\r\n          </Button>{\" \"}\r\n        </Modal.Footer>{\" \"}\r\n      </Modal>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteHospitalExperienceModal;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\specialAssignmentsServed.js",["122","123","124"],"import React, { useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport AddSpecialAssignmentModal from \"./addSpecialAssignmentModal\";\r\nimport EditIcon from \"../edit-24px.svg\";\r\nimport EditSpecialAssignmentModal from \"./editSpecialAssignmentModal\";\r\nimport DeleteSpecialAssignmentModal from \"./deleteSpecialAssignmentModal\";\r\n\r\nconst SpecialAssignmentsServed = () => {\r\n  const { addSpecialAssignmentServed, state } = useContext(experiencesContext);\r\n  const specialAssignmentsServedList = state.specialAssignmentsServed.map(\r\n    (exp, index) => {\r\n      return (\r\n        <div style={{ flexDirection: \"row\" }}>\r\n          <li style={{ display: \"inline\" }}> {`\\u2022 ${exp}`} </li>{\" \"}\r\n          {/* <img src={EditIcon} onClick={() => {console.log('edit clicked')}} ></img> */}{\" \"}\r\n          <EditSpecialAssignmentModal experience={exp} expIndex={index} />{\" \"}\r\n          <DeleteSpecialAssignmentModal experience={exp} expIndex={index} />{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      <ul style={{marginTop: '40px'}} > {specialAssignmentsServedList} </ul>{\" \"}\r\n      {/* <Button variant=\"primary\" style={{margin: 'auto', marginTop: '16px'}} >Add New</Button> */}{\" \"}\r\n      <AddSpecialAssignmentModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecialAssignmentsServed;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\addSpecialAssignmentModal.js",["125"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst AddSpecialAssignmentModal = () => {\r\n  const { addSpecialAssignmentServed, state } = useContext(experiencesContext);\r\n  const [specialAssignment, setSpecialAssignment] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"primary\"\r\n        style={{ margin: \"auto\", marginTop: \"16px\" }}\r\n        onClick={handleShow}\r\n      >\r\n        Add new\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Please enter new special assignment</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"hospitalExperience\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter special assignment\"\r\n                value={specialAssignment}\r\n                onChange={(event) => {\r\n                    setSpecialAssignment(event.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n                addSpecialAssignmentServed(specialAssignment);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddSpecialAssignmentModal;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\deleteSpecialAssignmentModal.js",["126","127","128"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DeleteIcon from \"../delete-24px.svg\";\r\n\r\nconst DeleteSpecialAssignmentModal = (props) => {\r\n  const { deleteSpecialAssignmentServed, state } = useContext(\r\n    experiencesContext\r\n  );\r\n  const [specialAssignment, setSpecialAssignment] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <img src={DeleteIcon} onClick={handleShow}>\r\n      </img>{\" \"}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title> Deleting special assignment </Modal.Title>{\" \"}\r\n        </Modal.Header>{\" \"}\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"specialAssignment\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={props.experience}\r\n                value={specialAssignment}\r\n                disabled\r\n              />{\" \"}\r\n            </Form.Group>{\" \"}\r\n          </Form>{\" \"}\r\n        </Modal.Body>{\" \"}\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              deleteSpecialAssignmentServed(props.experience, props.expIndex);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Confirm{\" \"}\r\n          </Button>{\" \"}\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel{\" \"}\r\n          </Button>{\" \"}\r\n        </Modal.Footer>{\" \"}\r\n      </Modal>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteSpecialAssignmentModal;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\editSpecialAssignmentModal.js",["129","130"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport EditIcon from \"../edit-24px.svg\";\r\n\r\nconst EditSpecialAssignmentModal = (props) => {\r\n  const { editSpecialAssignmentServed, state } = useContext(experiencesContext);\r\n  const [specialAssignment, setSpecialAssignment] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <img src={EditIcon} onClick={handleShow}></img>{\" \"}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title> Edit Special Assignment </Modal.Title>{\" \"}\r\n        </Modal.Header>{\" \"}\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"specialAssignment\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={props.experience}\r\n                value={specialAssignment}\r\n                onChange={(event) => {\r\n                  setSpecialAssignment(event.target.value);\r\n                }}\r\n              />{\" \"}\r\n            </Form.Group>{\" \"}\r\n          </Form>{\" \"}\r\n        </Modal.Body>{\" \"}\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              editSpecialAssignmentServed(specialAssignment, props.expIndex);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Save{\" \"}\r\n          </Button>{\" \"}\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel{\" \"}\r\n          </Button>{\" \"}\r\n        </Modal.Footer>{\" \"}\r\n      </Modal>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSpecialAssignmentModal;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\professionalPositions.js",["131","132","133"],"import React, { useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport AddProfessionalPositionModal from \"./AddProfessionalPositionModal\";\r\nimport EditIcon from \"../edit-24px.svg\";\r\nimport EditProfessionalPositionsModal from \"./editProfessionalPositionsModal\";\r\nimport DeleteProfessionalPositionModal from \"./deleteProfessionalPositionModal\";\r\n\r\nconst ProfessionalPositions = () => {\r\n  const { addProfessionalPositions, state } = useContext(experiencesContext);\r\n  const professionalPositionsList = state.professionalPositions.map(\r\n    (exp, index) => {\r\n      return (\r\n        <div style={{ flexDirection: \"row\" }}>\r\n          <li style={{ display: \"inline\" }}> {`\\u2022 ${exp}`} </li>{\" \"}\r\n          {/* <img src={EditIcon} onClick={() => {console.log('edit clicked')}} ></img> */}{\" \"}\r\n          <EditProfessionalPositionsModal experience={exp} expIndex={index} />{\" \"}\r\n          <DeleteProfessionalPositionModal experience={exp} expIndex={index} />{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      <ul style={{marginTop: '40px'}}> {professionalPositionsList} </ul>{\" \"}\r\n      {/* <Button variant=\"primary\" style={{margin: 'auto', marginTop: '16px'}} >Add New</Button> */}{\" \"}\r\n      <AddProfessionalPositionModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessionalPositions;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\AddProfessionalPositionModal.js",["134"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst AddProfessionalPositionModal = () => {\r\n  const { addProfessionalPositions, state } = useContext(experiencesContext);\r\n  const [professionalPosition, setProfessionalPosition] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"primary\"\r\n        style={{ margin: \"auto\", marginTop: \"16px\" }}\r\n        onClick={handleShow}\r\n      >\r\n        Add new\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Please enter new professional position</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"professionalPosition\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter professional position\"\r\n                value={professionalPosition}\r\n                onChange={(event) => {\r\n                    setProfessionalPosition(event.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n                addProfessionalPositions(professionalPosition);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProfessionalPositionModal;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\editProfessionalPositionsModal.js",["135","136"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport EditIcon from \"../edit-24px.svg\";\r\n\r\nconst EditProfessionalPositionsModal = (props) => {\r\n  const { editProfessionalPositions, state } = useContext(experiencesContext);\r\n  const [professionalPosition, setProfessionalPosition] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <img src={EditIcon} onClick={handleShow}></img>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title> Edit professional position </Modal.Title>{\" \"}\r\n        </Modal.Header>{\" \"}\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"professionalPosition\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={props.experience}\r\n                value={professionalPosition}\r\n                onChange={(event) => {\r\n                  setProfessionalPosition(event.target.value);\r\n                }}\r\n              />{\" \"}\r\n            </Form.Group>{\" \"}\r\n          </Form>{\" \"}\r\n        </Modal.Body>{\" \"}\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              editProfessionalPositions(professionalPosition, props.expIndex);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Save{\" \"}\r\n          </Button>{\" \"}\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel{\" \"}\r\n          </Button>{\" \"}\r\n        </Modal.Footer>{\" \"}\r\n      </Modal>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfessionalPositionsModal;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\deleteProfessionalPositionModal.js",["137","138","139"],"import React, { useState, useContext } from \"react\";\r\nimport { Context as experiencesContext } from \"../context/experiencesContext\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DeleteIcon from \"../delete-24px.svg\";\r\n\r\nconst DeleteProfessionalPositionModal = (props) => {\r\n  const { deleteProfessionalPosition, state } = useContext(experiencesContext);\r\n  const [professionalPosition, setProfessionalPosition] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <img src={DeleteIcon} onClick={handleShow}></img>{\" \"}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title> Deleting professional position </Modal.Title>{\" \"}\r\n        </Modal.Header>{\" \"}\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group as={Col} controlId=\"hospitalExperience\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={props.experience}\r\n                value={professionalPosition}\r\n                disabled\r\n              />{\" \"}\r\n            </Form.Group>{\" \"}\r\n          </Form>{\" \"}\r\n        </Modal.Body>{\" \"}\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n                deleteProfessionalPosition(props.experience, props.expIndex);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Confirm{\" \"}\r\n          </Button>{\" \"}\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Cancel{\" \"}\r\n          </Button>{\" \"}\r\n        </Modal.Footer>{\" \"}\r\n      </Modal>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteProfessionalPositionModal;\r\n",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":9,"column":10,"nodeType":"146","messageId":"147","endLine":9,"endColumn":19},{"ruleId":"144","severity":1,"message":"148","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":3,"column":1,"nodeType":"151","endLine":21,"endColumn":3},{"ruleId":"144","severity":1,"message":"152","line":33,"column":9,"nodeType":"146","messageId":"147","endLine":33,"endColumn":32},{"ruleId":"144","severity":1,"message":"148","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"153","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":16},{"ruleId":"144","severity":1,"message":"154","line":10,"column":11,"nodeType":"146","messageId":"147","endLine":10,"endColumn":32},{"ruleId":"144","severity":1,"message":"155","line":9,"column":34,"nodeType":"146","messageId":"147","endLine":9,"endColumn":39},{"ruleId":"144","severity":1,"message":"155","line":10,"column":35,"nodeType":"146","messageId":"147","endLine":10,"endColumn":40},{"ruleId":"156","severity":1,"message":"157","line":19,"column":7,"nodeType":"158","endLine":19,"endColumn":48},{"ruleId":"144","severity":1,"message":"155","line":10,"column":37,"nodeType":"146","messageId":"147","endLine":10,"endColumn":42},{"ruleId":"144","severity":1,"message":"159","line":11,"column":30,"nodeType":"146","messageId":"147","endLine":11,"endColumn":51},{"ruleId":"156","severity":1,"message":"157","line":19,"column":7,"nodeType":"158","endLine":19,"endColumn":50},{"ruleId":"144","severity":1,"message":"148","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"153","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":16},{"ruleId":"144","severity":1,"message":"160","line":10,"column":11,"nodeType":"146","messageId":"147","endLine":10,"endColumn":37},{"ruleId":"144","severity":1,"message":"155","line":9,"column":39,"nodeType":"146","messageId":"147","endLine":9,"endColumn":44},{"ruleId":"144","severity":1,"message":"155","line":10,"column":42,"nodeType":"146","messageId":"147","endLine":10,"endColumn":47},{"ruleId":"144","severity":1,"message":"161","line":13,"column":29,"nodeType":"146","messageId":"147","endLine":13,"endColumn":49},{"ruleId":"156","severity":1,"message":"157","line":21,"column":7,"nodeType":"158","endLine":21,"endColumn":50},{"ruleId":"144","severity":1,"message":"155","line":10,"column":40,"nodeType":"146","messageId":"147","endLine":10,"endColumn":45},{"ruleId":"156","severity":1,"message":"157","line":19,"column":7,"nodeType":"158","endLine":19,"endColumn":48},{"ruleId":"144","severity":1,"message":"148","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"153","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":16},{"ruleId":"144","severity":1,"message":"162","line":10,"column":11,"nodeType":"146","messageId":"147","endLine":10,"endColumn":35},{"ruleId":"144","severity":1,"message":"155","line":9,"column":37,"nodeType":"146","messageId":"147","endLine":9,"endColumn":42},{"ruleId":"144","severity":1,"message":"155","line":10,"column":38,"nodeType":"146","messageId":"147","endLine":10,"endColumn":43},{"ruleId":"156","severity":1,"message":"157","line":19,"column":7,"nodeType":"158","endLine":19,"endColumn":48},{"ruleId":"144","severity":1,"message":"155","line":10,"column":39,"nodeType":"146","messageId":"147","endLine":10,"endColumn":44},{"ruleId":"144","severity":1,"message":"163","line":11,"column":32,"nodeType":"146","messageId":"147","endLine":11,"endColumn":55},{"ruleId":"156","severity":1,"message":"157","line":19,"column":7,"nodeType":"158","endLine":19,"endColumn":50},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'PDFViewer' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'hospitalExperiencesList' is assigned a value but never used.","'EditIcon' is defined but never used.","'addHospitalExperience' is assigned a value but never used.","'state' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setHospitalExperience' is assigned a value but never used.","'addSpecialAssignmentServed' is assigned a value but never used.","'setSpecialAssignment' is assigned a value but never used.","'addProfessionalPositions' is assigned a value but never used.","'setProfessionalPosition' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]