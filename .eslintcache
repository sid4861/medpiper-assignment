[{"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\index.js":"1","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\App.js":"2","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\reportWebVitals.js":"3","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\form.js":"4","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\PersonalDetailsForm.js":"5","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\personalDetailsContext.js":"6","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\createDataContext.js":"7","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\resumePreview.js":"8"},{"size":566,"mtime":1611143343204,"results":"9","hashOfConfig":"10"},{"size":900,"mtime":1611161056588,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":861,"mtime":1611156280694,"results":"13","hashOfConfig":"10"},{"size":3290,"mtime":1611160763612,"results":"14","hashOfConfig":"10"},{"size":1582,"mtime":1611157350229,"results":"15","hashOfConfig":"10"},{"size":565,"mtime":1611156511474,"results":"16","hashOfConfig":"10"},{"size":1887,"mtime":1611162098313,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"4zdc0h",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\index.js",[],["38","39"],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\App.js",["40"],"import \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"../src/components/form\";\nimport { Provider as PersonalDetailsProvider } from \"./context/personalDetailsContext\";\nimport MyDocument from \"./components/resumePreview\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\n\nfunction App() {\n  return (\n    <PersonalDetailsProvider>\n      <div className=\"App\">\n        <Container fluid>\n          <Row style={{height: '100vh'}} >\n            <Col md={6}>\n              <Form />\n            </Col>\n            <Col md={6}>\n              {/* <PDFViewer style={{width: '100%', height: '100vh'}}> */}\n                <MyDocument />\n              {/* </PDFViewer> */}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </PersonalDetailsProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\reportWebVitals.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\form.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\PersonalDetailsForm.js",["41"],"import React, { useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Context as personalDetailsContext } from \"../context/personalDetailsContext\";\r\n\r\nconst PersonalDetailsForm = () => {\r\n  const {\r\n    inputFirstName,\r\n    inputMiddleName,\r\n    inputLastName,\r\n    inputDateOfBirth,\r\n    inputGender,\r\n    state,\r\n  } = useContext(personalDetailsContext);\r\n\r\n//   const clickHandler = () => {\r\n//     console.log(\r\n//       state.firstName,\r\n//       state.middleName,\r\n//       state.lastName,\r\n//       state.dateOfBirth,\r\n//       state.gender\r\n//     );\r\n//   };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter first name\"\r\n            value={state.firstName}\r\n            onChange={(event) => {\r\n              inputFirstName(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridMiddleName\">\r\n          <Form.Label>Middle Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter middle name\"\r\n            value={state.middleName}\r\n            onChange={(event) => {\r\n              inputMiddleName(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridLastName\">\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter last name\"\r\n            value={state.lastName}\r\n            onChange={(event) => {\r\n              inputLastName(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridDob\">\r\n          <Form.Label>Date of birth</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n            placeholder=\"dd/mm/yy\"\r\n            onChange={(event) => {\r\n              inputDateOfBirth(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridGender\">\r\n          <Form.Label>Gender</Form.Label>\r\n          <div key=\"custom-inline-radio\" className=\"mb-3\">\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              label=\"Male\"\r\n              type=\"radio\"\r\n              id=\"custom-inline-radio-1\"\r\n              value=\"Male\"\r\n              checked={state.gender === \"Male\"}\r\n              onChange={(e) => inputGender(e.currentTarget.value)}\r\n            />\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              label=\"Female\"\r\n              type=\"radio\"\r\n              id=\"custom-inline-radio-2\"\r\n              value=\"Female\"\r\n              checked={state.gender === \"Female\"}\r\n              onChange={(e) => inputGender(e.currentTarget.value)}\r\n            />\r\n          </div>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      {/* <Button onClick={clickHandler}> Display</Button> */}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PersonalDetailsForm;\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\personalDetailsContext.js",[],"C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\context\\createDataContext.js",["42"],"import React, { useReducer } from \"react\";\r\n\r\nexport default (reducer, actions, initialState) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const boundActions = {};\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n    return (\r\n      <Context.Provider value={{ state, ...boundActions }}>\r\n        {\" \"}\r\n        {children}{\" \"}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n\r\n  return { Context, Provider };\r\n};\r\n","C:\\Users\\siddhalo\\Documents\\Web Development\\ReactPractice\\medpiper-assignment\\src\\components\\resumePreview.js",["43","44","45","46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":19},{"ruleId":"52","severity":1,"message":"56","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":3,"column":1,"nodeType":"59","endLine":21,"endColumn":3},{"ruleId":"52","severity":1,"message":"60","line":21,"column":5,"nodeType":"54","messageId":"55","endLine":21,"endColumn":19},{"ruleId":"52","severity":1,"message":"61","line":22,"column":5,"nodeType":"54","messageId":"55","endLine":22,"endColumn":20},{"ruleId":"52","severity":1,"message":"62","line":23,"column":5,"nodeType":"54","messageId":"55","endLine":23,"endColumn":18},{"ruleId":"52","severity":1,"message":"63","line":24,"column":5,"nodeType":"54","messageId":"55","endLine":24,"endColumn":21},{"ruleId":"52","severity":1,"message":"64","line":25,"column":5,"nodeType":"54","messageId":"55","endLine":25,"endColumn":16},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'PDFViewer' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'inputFirstName' is assigned a value but never used.","'inputMiddleName' is assigned a value but never used.","'inputLastName' is assigned a value but never used.","'inputDateOfBirth' is assigned a value but never used.","'inputGender' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]